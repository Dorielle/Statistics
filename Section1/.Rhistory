seeds_train_Data
training.clustering <- seeds_train_Data$cluster
confusionMatrix(training.clustering, seed.trainLabels)
confusionMatrix(training.clustering, seed.trainLabels)
result <- cl_predict(seeds_train_Data,seed.test)
result
confusionMatrix(result, seed.testLabels)
confusionMatrix(result, seed.testLabels)
confusionMatrix(seeds_train_Data$cluster, seed.trainLabels)
confusionMatrix(result, seed.testLabels)
confusionMatrix(seeds_train_Data$cluster, seed.trainLabels)
confusionMatrix(result, seed.testLabels) # testing data
set.seed(455);
d.rows <- nrow(seeds)
d.sample <- sample(d.rows, d.rows*0.7)
d.train <- seeds[d.sample,]
d.test <- seeds[-d.sample,]
seed_norm <- as.data.frame(lapply(seeds[1:7], normalize))
ind <- sample(2, d.rows, replace=TRUE, prob=c(0.7,0.3))
seed.training <- seed_norm[ind==1, 1:7]
seed.test <- seed_norm[ind==2, 1:7]
seed.trainLabels <- seeds[ind==1, 8]
seed.testLabels <- seeds[ind==2, 8]
## k-means on training data ####
seeds_train_Data <- kmeans(seed.training,3, nstart = 750)
table(seeds_train_Data$cluster,seed.trainLabels)
## k-means on testing data ####
result <- cl_predict(seeds_train_Data,seed.test)
conf_tbl <- table(seed.testLabels,result)
conf_tbl
## Confusion matrix ####
confusionMatrix(seeds_train_Data$cluster, seed.trainLabels) #training data
confusionMatrix(result, seed.testLabels) # testing data
rm(list=ls())
library(cluster)
library(ggplot2)
library(ggfortify)
library(clue)
library(descr)
library(gmodels)
library(caret)
## Data Initialisation ####
seeds <- read.csv("seed_dataset.csv")
head(seeds)
summary(seeds)
## K-means ####
# Set seed so that the clustering results do not change from run to run
# This happens since k-means is a randomised clustering algoithm
set.seed(456);
# Remove the variety variable
# and create a new dataframe with the features only
seeds.features = seeds
seeds.features$variety <- NULL
# Create k-means
# with k (number of clusters) set to 3
# 3 is chosen as we know from the summary that there are 3 seed varietes in the dataset
kmeansResult <- kmeans(seeds.features, 3)
kmeansResult
normalize <- function(x) {
num <- x - min(x)
denom <- max(x) - min(x)
return (num/denom)
}
set.seed(455);
d.rows <- nrow(seeds)
d.sample <- sample(d.rows, d.rows*0.7)
d.train <- seeds[d.sample,]
d.test <- seeds[-d.sample,]
seed_norm <- as.data.frame(lapply(seeds[1:7], normalize))
ind <- sample(2, d.rows, replace=TRUE, prob=c(0.7,0.3))
seed.training <- seed_norm[ind==1, 1:7]
seed.test <- seed_norm[ind==2, 1:7]
seed.trainLabels <- seeds[ind==1, 8]
seed.testLabels <- seeds[ind==2, 8]
## k-means on training data ####
seeds_train_Data <- kmeans(seed.training,3, nstart = 750)
table(seeds_train_Data$cluster,seed.trainLabels)
## k-means on testing data ####
result <- cl_predict(seeds_train_Data,seed.test)
conf_tbl <- table(seed.testLabels,result)
conf_tbl
confusionMatrix(result, seed.testLabels) # testing data
set.seed(455);
d.rows <- nrow(seeds)
d.sample <- sample(d.rows, d.rows*0.7)
d.train <- seeds[d.sample,]
d.test <- seeds[-d.sample,]
seed_norm <- as.data.frame(lapply(seeds[1:7], normalize))
ind <- sample(2, d.rows, replace=TRUE, prob=c(0.8,0.2))
seed.training <- seed_norm[ind==1, 1:7]
seed.test <- seed_norm[ind==2, 1:7]
seed.trainLabels <- seeds[ind==1, 8]
seed.testLabels <- seeds[ind==2, 8]
## k-means on training data ####
seeds_train_Data <- kmeans(seed.training,3, nstart = 750)
table(seeds_train_Data$cluster,seed.trainLabels)
## k-means on testing data ####
result <- cl_predict(seeds_train_Data,seed.test)
conf_tbl <- table(seed.testLabels,result)
conf_tbl
## Confusion matrix ####
confusionMatrix(seeds_train_Data$cluster, seed.trainLabels) #training data
confusionMatrix(result, seed.testLabels) # testing data
set.seed(455);
d.rows <- nrow(seeds)
d.sample <- sample(d.rows, d.rows*0.8)
d.train <- seeds[d.sample,]
d.test <- seeds[-d.sample,]
seed_norm <- as.data.frame(lapply(seeds[1:7], normalize))
ind <- sample(2, d.rows, replace=TRUE, prob=c(0.8,0.2))
seed.training <- seed_norm[ind==1, 1:7]
seed.test <- seed_norm[ind==2, 1:7]
seed.trainLabels <- seeds[ind==1, 8]
seed.testLabels <- seeds[ind==2, 8]
## k-means on training data ####
seeds_train_Data <- kmeans(seed.training,3, nstart = 750)
table(seeds_train_Data$cluster,seed.trainLabels)
## k-means on testing data ####
result <- cl_predict(seeds_train_Data,seed.test)
conf_tbl <- table(seed.testLabels,result)
conf_tbl
## Confusion matrix ####
confusionMatrix(seeds_train_Data$cluster, seed.trainLabels) #training data
confusionMatrix(result, seed.testLabels) # testing data
set.seed(460);
d.rows <- nrow(seeds)
#d.sample <- sample(d.rows, d.rows*0.8)
#d.train <- seeds[d.sample,]
#d.test <- seeds[-d.sample,]
seed_norm <- as.data.frame(lapply(seeds[1:7], normalize))
ind <- sample(2, d.rows, replace=TRUE, prob=c(0.8,0.2))
seed.training <- seed_norm[ind==1, 1:7]
seed.test <- seed_norm[ind==2, 1:7]
seed.trainLabels <- seeds[ind==1, 8]
seed.testLabels <- seeds[ind==2, 8]
## k-means on training data ####
seeds_train_Data <- kmeans(seed.training,3, nstart = 750)
table(seeds_train_Data$cluster,seed.trainLabels)
## k-means on testing data ####
result <- cl_predict(seeds_train_Data,seed.test)
conf_tbl <- table(seed.testLabels,result)
conf_tbl
## Confusion matrix ####
confusionMatrix(seeds_train_Data$cluster, seed.trainLabels) #training data
confusionMatrix(result, seed.testLabels) # testing data
set.seed(456);
d.rows <- nrow(seeds)
#d.sample <- sample(d.rows, d.rows*0.8)
#d.train <- seeds[d.sample,]
#d.test <- seeds[-d.sample,]
seed_norm <- as.data.frame(lapply(seeds[1:7], normalize))
ind <- sample(2, d.rows, replace=TRUE, prob=c(0.8,0.2))
seed.training <- seed_norm[ind==1, 1:7]
seed.test <- seed_norm[ind==2, 1:7]
seed.trainLabels <- seeds[ind==1, 8]
seed.testLabels <- seeds[ind==2, 8]
## k-means on training data ####
seeds_train_Data <- kmeans(seed.training,3, nstart = 750)
table(seeds_train_Data$cluster,seed.trainLabels)
## k-means on testing data ####
result <- cl_predict(seeds_train_Data,seed.test)
conf_tbl <- table(seed.testLabels,result)
conf_tbl
## Confusion matrix ####
confusionMatrix(seeds_train_Data$cluster, seed.trainLabels) #training data
confusionMatrix(result, seed.testLabels) # testing data
normalize <- function(x) {
num <- x - min(x)
denom <- max(x) - min(x)
return (num/denom)
}
set.seed(455);
d.rows <- nrow(seeds)
d.sample <- sample(d.rows, d.rows*0.8)
d.train <- seeds[d.sample,]
d.test <- seeds[-d.sample,]
seed_norm <- as.data.frame(lapply(seeds[1:7], normalize))
ind <- sample(2, d.rows, replace=TRUE, prob=c(0.8,0.2))
seed.training <- seed_norm[ind==1, 1:7]
seed.test <- seed_norm[ind==2, 1:7]
seed.trainLabels <- seeds[ind==1, 8]
seed.testLabels <- seeds[ind==2, 8]
## k-means on training data ####
seeds_train_Data <- kmeans(seed.training,3, nstart = 750)
table(seeds_train_Data$cluster,seed.trainLabels)
## k-means on testing data ####
result <- cl_predict(seeds_train_Data,seed.test)
conf_tbl <- table(seed.testLabels,result)
conf_tbl
## Confusion matrix ####
confusionMatrix(seeds_train_Data$cluster, seed.trainLabels) #training data
confusionMatrix(result, seed.testLabels) # testing data
set.seed(455);
d.rows <- nrow(seeds)
d.sample <- sample(d.rows, d.rows*0.8)
d.train <- seeds[d.sample,]
d.test <- seeds[-d.sample,]
seed_norm <- as.data.frame(lapply(seeds[1:7], normalize))
ind <- sample(2, d.rows, replace=TRUE, prob=c(0.9,0.1))
seed.training <- seed_norm[ind==1, 1:7]
seed.test <- seed_norm[ind==2, 1:7]
seed.trainLabels <- seeds[ind==1, 8]
seed.testLabels <- seeds[ind==2, 8]
## k-means on training data ####
seeds_train_Data <- kmeans(seed.training,3, nstart = 750)
table(seeds_train_Data$cluster,seed.trainLabels)
## k-means on testing data ####
result <- cl_predict(seeds_train_Data,seed.test)
conf_tbl <- table(seed.testLabels,result)
conf_tbl
## Confusion matrix ####
confusionMatrix(seeds_train_Data$cluster, seed.trainLabels) #training data
confusionMatrix(result, seed.testLabels) # testing data
set.seed(455);
d.rows <- nrow(seeds)
d.sample <- sample(d.rows, d.rows*0.8)
d.train <- seeds[d.sample,]
d.test <- seeds[-d.sample,]
seed_norm <- as.data.frame(lapply(seeds[1:7], normalize))
ind <- sample(2, d.rows, replace=TRUE, prob=c(0.7,0.3))
seed.training <- seed_norm[ind==1, 1:7]
seed.test <- seed_norm[ind==2, 1:7]
seed.trainLabels <- seeds[ind==1, 8]
seed.testLabels <- seeds[ind==2, 8]
## k-means on training data ####
seeds_train_Data <- kmeans(seed.training,3, nstart = 750)
table(seeds_train_Data$cluster,seed.trainLabels)
## k-means on testing data ####
result <- cl_predict(seeds_train_Data,seed.test)
conf_tbl <- table(seed.testLabels,result)
conf_tbl
## Confusion matrix ####
confusionMatrix(seeds_train_Data$cluster, seed.trainLabels) #training data
confusionMatrix(result, seed.testLabels) # testing data
set.seed(455);
d.rows <- nrow(seeds)
d.sample <- sample(d.rows, d.rows*0.8)
d.train <- seeds[d.sample,]
d.test <- seeds[-d.sample,]
seed_norm <- as.data.frame(lapply(seeds[1:7], normalize))
ind <- sample(2, d.rows, replace=TRUE, prob=c(0.7,0.3))
seed.training <- seed_norm[ind==1, 1:7]
seed.test <- seed_norm[ind==2, 1:7]
seed.trainLabels <- seeds[ind==1, 8]
seed.testLabels <- seeds[ind==2, 8]
## k-means on training data ####
seeds_train_Data <- kmeans(seed.training,3, nstart = 750)
table(seeds_train_Data$cluster,seed.trainLabels)
## k-means on testing data ####
result <- cl_predict(seeds_train_Data,seed.test)
conf_tbl <- table(seed.testLabels,result)
conf_tbl
## Confusion matrix ####
confusionMatrix(seeds_train_Data$cluster, seed.trainLabels) #training data
confusionMatrix(result, seed.testLabels) # testing data
set.seed(455);
d.rows <- nrow(seeds)
d.sample <- sample(d.rows, d.rows*0.7)
d.train <- seeds[d.sample,]
d.test <- seeds[-d.sample,]
seed_norm <- as.data.frame(lapply(seeds[1:7], normalize))
ind <- sample(2, d.rows, replace=TRUE, prob=c(0.7,0.3))
seed.training <- seed_norm[ind==1, 1:7]
seed.test <- seed_norm[ind==2, 1:7]
seed.trainLabels <- seeds[ind==1, 8]
seed.testLabels <- seeds[ind==2, 8]
## k-means on training data ####
seeds_train_Data <- kmeans(seed.training,3, nstart = 750)
table(seeds_train_Data$cluster,seed.trainLabels)
## k-means on testing data ####
result <- cl_predict(seeds_train_Data,seed.test)
conf_tbl <- table(seed.testLabels,result)
conf_tbl
## Confusion matrix ####
confusionMatrix(seeds_train_Data$cluster, seed.trainLabels) #training data
confusionMatrix(result, seed.testLabels) # testing data
set.seed(455);
d.rows <- nrow(seeds)
# d.sample <- sample(d.rows, d.rows*0.8)
# d.train <- seeds[d.sample,]
# d.test <- seeds[-d.sample,]
seed_norm <- as.data.frame(lapply(seeds[1:7], normalize))
ind <- sample(2, d.rows, replace=TRUE, prob=c(0.8,0.2))
seed.training <- seed_norm[ind==1, 1:7]
seed.test <- seed_norm[ind==2, 1:7]
seed.trainLabels <- seeds[ind==1, 8]
seed.testLabels <- seeds[ind==2, 8]
## k-means on training data ####
seeds_train_Data <- kmeans(seed.training,3, nstart = 800)
table(seeds_train_Data$cluster,seed.trainLabels)
## k-means on testing data ####
result <- cl_predict(seeds_train_Data,seed.test)
conf_tbl <- table(seed.testLabels,result)
conf_tbl
## Confusion matrix ####
confusionMatrix(seeds_train_Data$cluster, seed.trainLabels) #training data
confusionMatrix(result, seed.testLabels) # testing data
set.seed(455);
d.rows <- nrow(seeds)
# d.sample <- sample(d.rows, d.rows*0.8)
# d.train <- seeds[d.sample,]
# d.test <- seeds[-d.sample,]
seed_norm <- as.data.frame(lapply(seeds[1:7], normalize))
ind <- sample(2, d.rows, replace=TRUE, prob=c(0.8,0.2))
seed.training <- seed_norm[ind==1, 1:7]
seed.test <- seed_norm[ind==2, 1:7]
seed.trainLabels <- seeds[ind==1, 8]
seed.testLabels <- seeds[ind==2, 8]
## k-means on training data ####
seeds_train_Data <- kmeans(seed.training,3, nstart = 800)
table(seeds_train_Data$cluster,seed.trainLabels)
## k-means on testing data ####
result <- cl_predict(seeds_train_Data,seed.test)
conf_tbl <- table(seed.testLabels,result)
conf_tbl
## Confusion matrix ####
confusionMatrix(seeds_train_Data$cluster, seed.trainLabels) #training data
confusionMatrix(result, seed.testLabels) # testing data
normalize <- function(x) {
num <- x - min(x)
denom <- max(x) - min(x)
return (num/denom)
}
set.seed(455);
d.rows <- nrow(seeds)
# d.sample <- sample(d.rows, d.rows*0.8)
# d.train <- seeds[d.sample,]
# d.test <- seeds[-d.sample,]
seed_norm <- as.data.frame(lapply(seeds[1:7], normalize))
ind <- sample(2, d.rows, replace=TRUE, prob=c(0.8,0.2))
seed.training <- seed_norm[ind==1, 1:7]
seed.test <- seed_norm[ind==2, 1:7]
seed.trainLabels <- seeds[ind==1, 8]
seed.testLabels <- seeds[ind==2, 8]
## k-means on training data ####
seeds_train_Data <- kmeans(seed.training,3, nstart = 700)
table(seeds_train_Data$cluster,seed.trainLabels)
## k-means on testing data ####
result <- cl_predict(seeds_train_Data,seed.test)
conf_tbl <- table(seed.testLabels,result)
conf_tbl
## Confusion matrix ####
confusionMatrix(seeds_train_Data$cluster, seed.trainLabels) #training data
confusionMatrix(result, seed.testLabels) # testing data
set.seed(123);
d.rows <- nrow(seeds)
# d.sample <- sample(d.rows, d.rows*0.8)
# d.train <- seeds[d.sample,]
# d.test <- seeds[-d.sample,]
seed_norm <- as.data.frame(lapply(seeds[1:7], normalize))
ind <- sample(2, d.rows, replace=TRUE, prob=c(0.8,0.2))
seed.training <- seed_norm[ind==1, 1:7]
seed.test <- seed_norm[ind==2, 1:7]
seed.trainLabels <- seeds[ind==1, 8]
seed.testLabels <- seeds[ind==2, 8]
## k-means on training data ####
seeds_train_Data <- kmeans(seed.training,3, nstart = 700)
table(seeds_train_Data$cluster,seed.trainLabels)
## k-means on testing data ####
result <- cl_predict(seeds_train_Data,seed.test)
conf_tbl <- table(seed.testLabels,result)
conf_tbl
## Confusion matrix ####
confusionMatrix(seeds_train_Data$cluster, seed.trainLabels) #training data
confusionMatrix(result, seed.testLabels) # testing data
set.seed(500);
d.rows <- nrow(seeds)
# d.sample <- sample(d.rows, d.rows*0.8)
# d.train <- seeds[d.sample,]
# d.test <- seeds[-d.sample,]
seed_norm <- as.data.frame(lapply(seeds[1:7], normalize))
ind <- sample(2, d.rows, replace=TRUE, prob=c(0.8,0.2))
seed.training <- seed_norm[ind==1, 1:7]
seed.test <- seed_norm[ind==2, 1:7]
seed.trainLabels <- seeds[ind==1, 8]
seed.testLabels <- seeds[ind==2, 8]
## k-means on training data ####
seeds_train_Data <- kmeans(seed.training,3, nstart = 700)
table(seeds_train_Data$cluster,seed.trainLabels)
## k-means on testing data ####
result <- cl_predict(seeds_train_Data,seed.test)
conf_tbl <- table(seed.testLabels,result)
conf_tbl
## Confusion matrix ####
confusionMatrix(seeds_train_Data$cluster, seed.trainLabels) #training data
confusionMatrix(result, seed.testLabels) # testing data
set.seed(455);
d.rows <- nrow(seeds)
# d.sample <- sample(d.rows, d.rows*0.8)
# d.train <- seeds[d.sample,]
# d.test <- seeds[-d.sample,]
seed_norm <- as.data.frame(lapply(seeds[1:7], normalize))
ind <- sample(2, d.rows, replace=TRUE, prob=c(0.8,0.2))
seed.training <- seed_norm[ind==1, 1:7]
seed.test <- seed_norm[ind==2, 1:7]
seed.trainLabels <- seeds[ind==1, 8]
seed.testLabels <- seeds[ind==2, 8]
## k-means on training data ####
seeds_train_Data <- kmeans(seed.training,3, nstart = 750)
table(seeds_train_Data$cluster,seed.trainLabels)
## k-means on testing data ####
result <- cl_predict(seeds_train_Data,seed.test)
conf_tbl <- table(seed.testLabels,result)
conf_tbl
## Confusion matrix ####
confusionMatrix(seeds_train_Data$cluster, seed.trainLabels) #training data
confusionMatrix(result, seed.testLabels) # testing data
set.seed(455);
d.rows <- nrow(seeds)
d.sample <- sample(d.rows, d.rows*0.8)
d.train <- seeds[d.sample,]
d.test <- seeds[-d.sample,]
seed_norm <- as.data.frame(lapply(seeds[1:7], normalize))
ind <- sample(2, d.rows, replace=TRUE, prob=c(0.8,0.2))
seed.training <- seed_norm[ind==1, 1:7]
seed.test <- seed_norm[ind==2, 1:7]
seed.trainLabels <- seeds[ind==1, 8]
seed.testLabels <- seeds[ind==2, 8]
## k-means on training data ####
seeds_train_Data <- kmeans(seed.training,3, nstart = 750)
table(seeds_train_Data$cluster,seed.trainLabels)
## k-means on testing data ####
result <- cl_predict(seeds_train_Data,seed.test)
conf_tbl <- table(seed.testLabels,result)
conf_tbl
## Confusion matrix ####
confusionMatrix(seeds_train_Data$cluster, seed.trainLabels) #training data
confusionMatrix(result, seed.testLabels) # testing data
set.seed(455);
d.rows <- nrow(seeds)
d.sample <- sample(d.rows, d.rows*0.8)
d.train <- seeds[d.sample,]
d.test <- seeds[-d.sample,]
seed_norm <- as.data.frame(lapply(seeds[1:7], normalize))
ind <- sample(2, d.rows, replace=TRUE, prob=c(0.7,0.3))
seed.training <- seed_norm[ind==1, 1:7]
seed.test <- seed_norm[ind==2, 1:7]
seed.trainLabels <- seeds[ind==1, 8]
seed.testLabels <- seeds[ind==2, 8]
## k-means on training data ####
seeds_train_Data <- kmeans(seed.training,3, nstart = 750)
table(seeds_train_Data$cluster,seed.trainLabels)
## k-means on testing data ####
result <- cl_predict(seeds_train_Data,seed.test)
conf_tbl <- table(seed.testLabels,result)
conf_tbl
## Confusion matrix ####
confusionMatrix(seeds_train_Data$cluster, seed.trainLabels) #training data
confusionMatrix(result, seed.testLabels) # testing data
set.seed(455);
d.rows <- nrow(seeds)
d.sample <- sample(d.rows, d.rows*0.7)
d.train <- seeds[d.sample,]
d.test <- seeds[-d.sample,]
seed_norm <- as.data.frame(lapply(seeds[1:7], normalize))
ind <- sample(2, d.rows, replace=TRUE, prob=c(0.7,0.3))
seed.training <- seed_norm[ind==1, 1:7]
seed.test <- seed_norm[ind==2, 1:7]
seed.trainLabels <- seeds[ind==1, 8]
seed.testLabels <- seeds[ind==2, 8]
## k-means on training data ####
seeds_train_Data <- kmeans(seed.training,3, nstart = 750)
table(seeds_train_Data$cluster,seed.trainLabels)
## k-means on testing data ####
result <- cl_predict(seeds_train_Data,seed.test)
conf_tbl <- table(seed.testLabels,result)
conf_tbl
## Confusion matrix ####
confusionMatrix(seeds_train_Data$cluster, seed.trainLabels) #training data
confusionMatrix(result, seed.testLabels) # testing data
set.seed(455);
d.rows <- nrow(seeds)
d.sample <- sample(d.rows, d.rows*0.9)
d.train <- seeds[d.sample,]
d.test <- seeds[-d.sample,]
seed_norm <- as.data.frame(lapply(seeds[1:7], normalize))
ind <- sample(2, d.rows, replace=TRUE, prob=c(0.9,0.1))
seed.training <- seed_norm[ind==1, 1:7]
seed.test <- seed_norm[ind==2, 1:7]
seed.trainLabels <- seeds[ind==1, 8]
seed.testLabels <- seeds[ind==2, 8]
## k-means on training data ####
seeds_train_Data <- kmeans(seed.training,3, nstart = 750)
table(seeds_train_Data$cluster,seed.trainLabels)
## k-means on testing data ####
result <- cl_predict(seeds_train_Data,seed.test)
conf_tbl <- table(seed.testLabels,result)
conf_tbl
## Confusion matrix ####
confusionMatrix(seeds_train_Data$cluster, seed.trainLabels) #training data
confusionMatrix(result, seed.testLabels) # testing data
set.seed(455);
d.rows <- nrow(seeds)
d.sample <- sample(d.rows, d.rows*0.8)
d.train <- seeds[d.sample,]
d.test <- seeds[-d.sample,]
seed_norm <- as.data.frame(lapply(seeds[1:7], normalize))
ind <- sample(2, d.rows, replace=TRUE, prob=c(0.9,0.1))
seed.training <- seed_norm[ind==1, 1:7]
seed.test <- seed_norm[ind==2, 1:7]
seed.trainLabels <- seeds[ind==1, 8]
seed.testLabels <- seeds[ind==2, 8]
## k-means on training data ####
seeds_train_Data <- kmeans(seed.training,3, nstart = 750)
table(seeds_train_Data$cluster,seed.trainLabels)
## k-means on testing data ####
result <- cl_predict(seeds_train_Data,seed.test)
conf_tbl <- table(seed.testLabels,result)
conf_tbl
## Confusion matrix ####
confusionMatrix(seeds_train_Data$cluster, seed.trainLabels) #training data
confusionMatrix(result, seed.testLabels) # testing data
